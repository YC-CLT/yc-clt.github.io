<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git</title>
      <link href="/post/2025-05-29_git-note/"/>
      <url>/post/2025-05-29_git-note/</url>
      
        <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><p>参考：</p><div style="display: flex; justify-content: center; align-items: center;">    <iframe src="https://player.bilibili.com/player.html?isOutside=true&aid=366428746&bvid=BV1u94y1n73L&cid=1344264316&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height="450" width="800"></iframe></div><h3 id="配置操作"><a href="#配置操作" class="headerlink" title="配置操作"></a>配置操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;YC-CLT&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;2480237998@qq.com&quot;</span></span><br><span class="line">git config --list <span class="comment">#查看配置</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email <span class="comment">## 取消配置  </span></span><br></pre></td></tr></table></figure><h3 id="库操作"><a href="#库操作" class="headerlink" title="库操作"></a>库操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br><span class="line">git add . <span class="comment">#添加所有文件</span></span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span> </span><br><span class="line"></span><br><span class="line">git remote add origin https://github.com/YC-CLT/C_SchoolWork.git <span class="comment">#添加远程仓库，origin是远程仓库的别名 </span></span><br><span class="line">git remote -v <span class="comment">#查看远程仓库</span></span><br><span class="line">git remote set-url origin &lt;new-url&gt; <span class="comment">#修改远程仓库地址</span></span><br><span class="line">git remote remove origin <span class="comment">#删除远程仓库</span></span><br><span class="line">git remote rename old-name new-name <span class="comment">#重命名远程仓库</span></span><br><span class="line">git remote show origin <span class="comment">#查看远程仓库信息</span></span><br></pre></td></tr></table></figure><h3 id="推送操作"><a href="#推送操作" class="headerlink" title="推送操作"></a>推送操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main <span class="comment">#-u：这是一个选项，表示设置上游分支（upstream branch）。  </span></span><br><span class="line"><span class="comment">#这是 git push 命令的一个常用选项，用于建立本地分支和远程分支之间的关联关系。</span></span><br><span class="line">git push --set-upstream origin main <span class="comment">#同上</span></span><br><span class="line"></span><br><span class="line">git push origin main <span class="comment">#很正常的推送(main-&gt;main)</span></span><br><span class="line">git push origin main:master <span class="comment">#将本地的main分支推送到远程的master分支</span></span><br><span class="line">git push origin --delete main <span class="comment">#删除远程的main分支</span></span><br><span class="line">git push origin --delete <span class="built_in">test</span> <span class="comment">#删除远程的test分支</span></span><br></pre></td></tr></table></figure><h3 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b main <span class="comment">#创建一个名为main的分支</span></span><br><span class="line">git checkout main <span class="comment">#切换到main分支</span></span><br><span class="line"></span><br><span class="line">git branch <span class="comment">#查看分支</span></span><br><span class="line">git branch -a <span class="comment">#查看所有分支</span></span><br><span class="line">git branch -r <span class="comment">#查看远程分支</span></span><br><span class="line">git branch -d main <span class="comment">#删除本地的main分支</span></span><br><span class="line">git branch -D main <span class="comment">#强制删除本地的main分支</span></span><br><span class="line">git push origin --delete main <span class="comment">#删除远程的main分支</span></span><br><span class="line">git branch -m main new_main <span class="comment">#重命名本地的main分支为new_main</span></span><br><span class="line"></span><br><span class="line">git merge main <span class="comment">#将main分支合并到当前分支</span></span><br><span class="line">git merge --abort <span class="comment">#取消合并</span></span><br><span class="line">git merge --no-ff main <span class="comment">#禁用快速合并</span></span><br><span class="line">git merge --squash main <span class="comment">#将main分支合并到当前分支，并将其作为一个提交</span></span><br><span class="line"></span><br><span class="line">git rebase main <span class="comment">#当main更新时，需要先rebase一下，将本地的main分支合并到当前分支，避免冲突</span></span><br></pre></td></tr></table></figure><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;filename&gt; <span class="comment">#撤销对文件的修改，作用在工作区（磁盘）</span></span><br><span class="line">git restore &lt;filename&gt; <span class="comment">#同上</span></span><br><span class="line">git reset &lt;filename&gt; <span class="comment">#作用在暂存区，不会改工作区</span></span><br><span class="line">git restore --staged &lt;filename&gt; <span class="comment">#同上</span></span><br><span class="line">git checkout HEAD &lt;filename&gt; <span class="comment">#作用在工作区和暂存区</span></span><br><span class="line">git reset --soft HEAD~1 <span class="comment">#作用在本地库，保留工作区和暂存区的修改</span></span><br><span class="line"><span class="comment">#HEAD 表当前状态，HEAD~1 表上一个版本，HEAD~2 表上上个版本，以此类推</span></span><br><span class="line">git reset HEAD~1 <span class="comment">#作用在本地库和暂存区，保留工作区的修改</span></span><br><span class="line">git reset --hard HEAD~1 <span class="comment">#作用在本地库，工作区和暂存区，全都没了</span></span><br><span class="line">git revert HEAD <span class="comment">#反向提交，这玩意指哪打哪，比如1-&gt;2-&gt;3用HEAR~1可以直接在不破坏3的情况下，直接删除2</span></span><br><span class="line">git push -f <span class="comment">#强制推送，可能会炸</span></span><br></pre></td></tr></table></figure><p>参考:</p><div style="display: flex; justify-content: center; align-items: center;">    <iframe src="https://player.bilibili.com/player.html?isOutside=true&aid=559048463&bvid=BV1ne4y1S7S9&cid=861329934&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height="450" width="800"></iframe></div><h2 id="团队协作"><a href="#团队协作" class="headerlink" title="团队协作"></a>团队协作</h2><p>利用git与github实现团队协作  </p><p>下面是最简单的工作流：</p><p>先搞懂三个分支的概念：main（或master），dev，feature（当然还有hotfix之类的，但是这里咱先不讨论）</p><ul><li>main分支：用于发布稳定版本的代码</li><li>dev分支：用于开发新功能的分支</li><li>feature分支：<strong>基于dev分支</strong>，用于开发单个新功能的分支</li></ul><p>以开发一个名字叫cxk的新功能为例：</p><p>1.切到<strong>dev分支</strong>：<code>git checkout dev</code><br>2.从dev分支创建一个新的feature分支，这里叫的feature叫cxk：<code>git checkout -b cxk</code><br>3.在feature分支上开发新功能<br>4.当新功能开发完成后，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;feature cxk&quot;</span></span><br></pre></td></tr></table></figure><p>提交到本地先<br>5.切回dev分支：<code>git checkout dev</code><br>6.拉取最新代码：<code>git pull origin dev</code>这一步是为了将远程的dev分支合并到本地的dev分支，以确保本地的dev分支是最新的。<br>7.合并feature分支：<code>git merge cxk</code>这一步是将feature分支合并到本地dev分支。<br>8.将dev分支推送到远程：<code>git push origin dev</code>这一步是将本地的dev分支推送到远程的dev分支。<br>这样就可以了。</p><p>参考：</p><div style="display: flex; justify-content: center; align-items: center;">    <iframe src="https://player.bilibili.com/player.html?isOutside=true&aid=114182359875686&bvid=BV1d6XVYqEuy&cid=28928968344&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height="450" width="800"></iframe></div><br/><div style="display: flex; justify-content: center; align-items: center;">    <iframe src="https://player.bilibili.com/player.html?isOutside=true&aid=561005338&bvid=BV19e4y1q7JJ&cid=846391446&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height="450" width="800"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 2025 </tag>
            
            <tag> 大一 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>母亲节快乐！</title>
      <link href="/post/2025-05-11_happy-motherday/"/>
      <url>/post/2025-05-11_happy-motherday/</url>
      
        <content type="html"><![CDATA[<h1 id="母亲节快乐"><a href="#母亲节快乐" class="headerlink" title="母亲节快乐"></a>母亲节快乐</h1><p>右上角有惊喜  </p><p>或者点击👉<a href="../../gift/motherday/">这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 快乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2025 </tag>
            
            <tag> 大一 </tag>
            
            <tag> 节日 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 母亲节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello world!</title>
      <link href="/post/2025-05-10_hello-world/"/>
      <url>/post/2025-05-10_hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1><p>这页还是用来测试滴~</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2025 </tag>
            
            <tag> 大一 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/post/2025-05-02_first-post/"/>
      <url>/post/2025-05-02_first-post/</url>
      
        <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><p>这页用来测试滴~</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2025 </tag>
            
            <tag> 大一 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
